-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.apartment_expenses
(
    expense_id integer NOT NULL DEFAULT nextval('apartment_expenses_expense_id_seq'::regclass),
    apt_id integer NOT NULL DEFAULT nextval('apartment_expenses_apt_id_seq'::regclass),
    month_year text COLLATE pg_catalog."default" NOT NULL,
    amount_paid integer NOT NULL,
    notes text COLLATE pg_catalog."default",
    CONSTRAINT apartment_expenses_pkey PRIMARY KEY (expense_id)
);

CREATE TABLE IF NOT EXISTS public.contracts
(
    contract_id text COLLATE pg_catalog."default" NOT NULL,
    tenant_id text COLLATE pg_catalog."default",
    contract_start date NOT NULL,
    contract_end date NOT NULL,
    rent integer NOT NULL,
    notes text COLLATE pg_catalog."default",
    active boolean NOT NULL,
    CONSTRAINT contracts_pkey PRIMARY KEY (contract_id)
);

CREATE TABLE IF NOT EXISTS public.main_apartments
(
    apt_id integer NOT NULL DEFAULT nextval('main_apartments_apt_id_seq'::regclass),
    building_name text COLLATE pg_catalog."default" NOT NULL,
    apt_number text COLLATE pg_catalog."default" NOT NULL,
    total_rooms integer,
    CONSTRAINT main_apartments_pkey PRIMARY KEY (apt_id)
);

CREATE TABLE IF NOT EXISTS public.monthly_reports
(
    report_id text COLLATE pg_catalog."default" NOT NULL,
    apt_id integer NOT NULL DEFAULT nextval('monthly_reports_apt_id_seq'::regclass),
    month_year text COLLATE pg_catalog."default" NOT NULL,
    total_rent_due integer NOT NULL,
    total_rent_paid integer NOT NULL,
    total_expenses integer NOT NULL,
    CONSTRAINT monthly_reports_pkey PRIMARY KEY (report_id)
);

CREATE TABLE IF NOT EXISTS public.rent_payments
(
    payment_id text COLLATE pg_catalog."default" NOT NULL,
    tenant_id text COLLATE pg_catalog."default",
    month_year text COLLATE pg_catalog."default" NOT NULL,
    amount_paid integer NOT NULL,
    amount_due integer,
    notes text COLLATE pg_catalog."default",
    CONSTRAINT rent_payments_pkey PRIMARY KEY (payment_id)
);

CREATE TABLE IF NOT EXISTS public.rooms
(
    room_id integer NOT NULL DEFAULT nextval('rooms_room_id_seq'::regclass),
    apt_id integer NOT NULL DEFAULT nextval('rooms_apt_id_seq'::regclass),
    room_number text COLLATE pg_catalog."default" NOT NULL,
    room_type text COLLATE pg_catalog."default",
    capacity integer,
    vacant boolean,
    CONSTRAINT rooms_pkey PRIMARY KEY (room_id)
);

CREATE TABLE IF NOT EXISTS public.tenants
(
    tenant_id text COLLATE pg_catalog."default" NOT NULL,
    room_id integer NOT NULL DEFAULT nextval('tenants_room_id_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    emirates_id text COLLATE pg_catalog."default" NOT NULL,
    phone_number integer NOT NULL,
    email text COLLATE pg_catalog."default",
    date_settle_in date NOT NULL,
    apt_id integer,
    CONSTRAINT tenants_pkey PRIMARY KEY (tenant_id)
);

ALTER TABLE IF EXISTS public.apartment_expenses
    ADD CONSTRAINT apartment_expenses_apt_id_fkey FOREIGN KEY (apt_id)
        REFERENCES public.main_apartments (apt_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contracts
    ADD CONSTRAINT contracts_tenant_id_fkey FOREIGN KEY (tenant_id)
        REFERENCES public.tenants (tenant_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.monthly_reports
    ADD CONSTRAINT monthly_reports_apt_id_fkey FOREIGN KEY (apt_id)
        REFERENCES public.main_apartments (apt_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rent_payments
    ADD CONSTRAINT rent_payments_tenant_id_fkey FOREIGN KEY (tenant_id)
        REFERENCES public.tenants (tenant_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rooms
    ADD CONSTRAINT rooms_apt_id_fkey FOREIGN KEY (apt_id)
        REFERENCES public.main_apartments (apt_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tenants
    ADD CONSTRAINT tenants_apt_id_fkey FOREIGN KEY (apt_id)
        REFERENCES public.main_apartments (apt_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tenants
    ADD CONSTRAINT tenants_room_id_fkey FOREIGN KEY (room_id)
        REFERENCES public.rooms (room_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;

END;